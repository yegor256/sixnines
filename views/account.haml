- if stripe_key != 'test'
  :javascript
    $(function() {
      var handler = StripeCheckout.configure({
        key: '#{stripe_key}',
        image: '/images/logo.png',
        token: function (token) {
          $('#stripeToken').val(token.id);
          $('#stripeEmail').val(token.email);
          $('#form').submit();
        }
      });
      $('#go').on('click', function (e) {
        if ($("#form")[0].checkValidity() && !$("#coupon").val()) {
          handler.open({
            name: 'One-time charge',
            description: $('#endpoint').val(),
            amount: 495
          });
          e.preventDefault();
        }
      });
      $(window).on('popstate', function () {
        handler.close();
      });
    });

%form#form{:method=>'post', :action=>'/a/add'}
  %input#endpoint.text.b.f-span10{:type=>'url', :name=>'endpoint', :size=>'70', :placeholder=>'URI of a new endpoint'}
  %input#coupon.text.b.f-span4{:type=>'text', :name=>'coupon', :size=>'45', :placeholder=>'Coupon (if you have it)'}
  %input#stripeToken{type: 'hidden', name: 'stripeToken'}
  %input#stripeEmail{type: 'hidden', name: 'stripeEmail'}
  %input#go.button-blue.light.b.f-span3{:type=>'submit', :value=>'Add ($4.95)'}

- if endpoints.empty?
  %p
    There are no endpoints yet (add the first one above).
- else
  %p
    Your endpoints are:
  - endpoints.each do |e|
    %p
      = EpUri.new(e).favicon
      = EpUri.new(e).to_html
      %a{:href=>'/a/del?endpoint=' + URI.escape(EpUri.new(e).to_url),
        :onclick=>'return confirm("Attention! Be aware that you will not be able to restore it and to add a new one you will have to pay another $4.95!");'}
        delete
    %ul.menu-vertical
      %li
        Badge:
        =EpBadge.new(e).to_html
      %li
        URI:
        %code
          =EpUri.new(e).to_s
      %li
        Availability:
        =EpAvailability.new(e).full
      %li
        State:
        =EpState.new(e).to_html
      %li
        Created on:
        %span.gray= e.to_h[:created]
      %li
        Age:
        %span.gray= TimeDifference.between(e.to_h[:created], Time.now).humanize
      %li
        Next ping on:
        %span.gray=e.to_h[:expires]
